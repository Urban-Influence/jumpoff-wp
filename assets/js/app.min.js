(function() {
    function r(e, n, t) {
        function o(i, f) {
            if (!n[i]) {
                if (!e[i]) {
                    var c = "function" == typeof require && require;
                    if (!f && c) return c(i, !0);
                    if (u) return u(i, !0);
                    var a = new Error("Cannot find module '" + i + "'");
                    throw a.code = "MODULE_NOT_FOUND", a;
                }
                var p = n[i] = {
                    exports: {}
                };
                e[i][0].call(p.exports, function(r) {
                    var n = e[i][1][r];
                    return o(n || r);
                }, p, p.exports, r, e, n, t);
            }
            return n[i].exports;
        }
        for (var u = "function" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);
        return o;
    }
    return r;
})()({
    1: [ function(require, module, exports) {
        "use strict";
        var _Utils = _interopRequireDefault(require("./components/Utils.js"));
        require("./components/WhoDis/index.js");
        var _PageTransitions = _interopRequireDefault(require("./components/PageTransitions"));
        var _MenuSmall = _interopRequireDefault(require("./components/MenuSmall.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        _PageTransitions.default.init();
        _MenuSmall.default.init();
    }, {
        "./components/MenuSmall.js": 2,
        "./components/PageTransitions": 3,
        "./components/Utils.js": 4,
        "./components/WhoDis/index.js": 6
    } ],
    2: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var MenuSmall = function() {
            var html = document.querySelector("html");
            var menuToggle = document.querySelector(".js-menu-toggle");
            var times = {
                open: 0,
                close: 800
            };
            var isOpen = false;
            return {
                init: function init() {
                    this.bindEvents();
                },
                bindEvents: function bindEvents() {
                    menuToggle.addEventListener("click", function(e) {
                        MenuSmall.transitionState();
                        e.preventDefault();
                    });
                    window.onkeydown = function(e) {
                        if (isOpen && e.keyCode === 27) {
                            MenuSmall.transitionState();
                            e.preventDefault();
                        }
                    };
                },
                transitionState: function transitionState(elem) {
                    if (isOpen) {
                        MenuSmall.close();
                    } else {
                        MenuSmall.open();
                    }
                },
                open: function open() {
                    html.classList.add("menu-is-opening");
                    setTimeout(function() {
                        html.classList.remove("menu-is-closed");
                        html.classList.add("menu-is-open");
                        html.classList.remove("menu-is-opening");
                        isOpen = true;
                    }, times.open);
                },
                close: function close() {
                    html.classList.add("menu-is-closing");
                    setTimeout(function() {
                        html.classList.remove("menu-is-open");
                        html.classList.add("menu-is-closed");
                        html.classList.remove("menu-is-closing");
                        isOpen = false;
                    }, times.close);
                }
            };
        }();
        var _default = MenuSmall;
        exports.default = _default;
    }, {} ],
    3: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var _Utils = _interopRequireDefault(require("../components/Utils.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        var PageTransitions = function() {
            var s;
            var html = document.querySelector("html");
            var siteURL = location.host.toString();
            var noTrans = "no-trans";
            return {
                settings: {
                    transLinks: document.querySelectorAll('a[href^="http://' + siteURL + '"], a[href^="https://' + siteURL + '"], a[href^="/"]'),
                    linkLocation: null,
                    html: document.querySelector("html"),
                    body: document.querySelector("body"),
                    exitDuration: 900,
                    entranceDuration: 500,
                    isLoaded: false,
                    isMenuLink: false,
                    finalAnimationStart: 600,
                    classes: {
                        loading: "is-loading",
                        loaded: "is-loaded",
                        exiting: "is-exiting"
                    }
                },
                init: function init() {
                    s = this.settings;
                    this.isPageLoaded();
                    this.entrance();
                    this.transitionPage();
                    this.unloadWindow();
                    this.workaround();
                },
                entrance: function entrance() {
                    s.html.classList.add(s.classes.loading);
                    if (s.isLoaded = true) {
                        setTimeout(function() {
                            s.html.classList.remove(s.classes.loading);
                            s.html.classList.add(s.classes.loaded);
                        }, s.entranceDuration);
                        setTimeout(function() {
                            s.html.classList.add("is-animation-ready");
                        }, s.finalAnimationStart);
                    }
                },
                exit: function exit(duration) {
                    s.html.classList.add(s.classes.exiting);
                    setTimeout(function() {
                        PageTransitions.redirectPage();
                    }, duration);
                },
                isPageLoaded: function isPageLoaded() {
                    var state = document.readyState;
                    if (state === "interactive" || state === "complete") s.isLoaded = true;
                },
                transitionPage: function transitionPage() {
                    _Utils.default.forEach(s.transLinks, function(index, transLink) {
                        transLink.addEventListener("click", function(e) {
                            s.linkLocation = this.href;
                            if (s.html.classList.contains(noTrans) || this.classList.contains(noTrans)) return;
                            if (transLink.href.match("pdf")) return;
                            if (e.metaKey || e.ctrlKey || e.shiftKey) return;
                            e.preventDefault();
                            window.scroll({
                                top: 0,
                                left: 0,
                                behavior: "smooth"
                            });
                            PageTransitions.exit(s.exitDuration);
                        });
                    });
                },
                redirectPage: function redirectPage() {
                    window.location = s.linkLocation;
                },
                unloadWindow: function unloadWindow() {
                    window.onbeforeunload = null;
                },
                workaround: function workaround() {
                    window.onpageshow = function(e) {
                        if (e.persisted) window.location.reload();
                    };
                }
            };
        }();
        var _default = PageTransitions;
        exports.default = _default;
    }, {
        "../components/Utils.js": 4
    } ],
    4: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var Utils = function() {
            return {
                isReady: function isReady() {
                    var state = document.readyState;
                    if (state === "interactive" || state === "complete") {
                        return true;
                    }
                },
                render: function render(template, node) {
                    if (!node) return;
                    node.innerHTML = typeof template === "function" ? template() : template;
                    var event = new CustomEvent("elementRenders", {
                        bubbles: true
                    });
                    node.dispatchEvent(event);
                    return node;
                },
                forEach: function forEach(array, callback, scope) {
                    for (var i = 0; i < array.length; i++) {
                        callback.call(scope, i, array[i]);
                    }
                },
                throttle: function throttle(fn, wait) {
                    var time = Date.now();
                    return function() {
                        if (time + wait - Date.now() < 0) {
                            fn();
                            time = Date.now();
                        }
                    };
                },
                hasClass: function hasClass(el, className) {
                    if (el.classList.contains(className)) {
                        return true;
                    }
                },
                classList: function classList(el) {
                    var list = el.classList;
                    return {
                        toggle: function toggle(c) {
                            list.toggle(c);
                            return this;
                        },
                        add: function add(c) {
                            list.add(c);
                            return this;
                        },
                        remove: function remove(c) {
                            list.remove(c);
                            return this;
                        }
                    };
                },
                whichAnimationEvent: function whichAnimationEvent() {
                    var t;
                    var el = document.createElement("fakeelement");
                    var animations = {
                        animation: "animationend",
                        OAnimation: "oAnimationEnd",
                        MozAnimation: "animationend",
                        WebkitAnimation: "webkitAnimationEnd"
                    };
                    for (t in animations) {
                        if (el.style[t] !== undefined) {
                            return animations[t];
                        }
                    }
                },
                triggerEvent: function triggerEvent(elem, event) {
                    var clickEvent = new Event(event);
                    elem.dispatchEvent(clickEvent);
                },
                getQueryString: function getQueryString(field, url) {
                    var href = url ? url : window.location.href;
                    var reg = new RegExp("[?&]" + field + "=([^&#]*)", "i");
                    var string = reg.exec(href);
                    return string ? string[1] : null;
                },
                fetchData: function fetchData(url) {
                    return window.fetch(url).then(function(res) {
                        return res.json();
                    }).then(function(json) {
                        return json;
                    }).catch(function(ex) {
                        return console.log("failed", ex);
                    });
                },
                loadJSONP: function loadJSONP(url, callback, context) {
                    var unique = 0;
                    var name = "_jsonp_" + unique++;
                    if (url.match(/\?/)) url += "&callback=" + name; else url += "?callback=" + name;
                    var script = document.createElement("script");
                    script.type = "text/javascript";
                    script.src = url;
                    window[name] = function(data) {
                        callback.call(context || window, data);
                        document.getElementsByTagName("head")[0].removeChild(script);
                        script = null;
                        delete window[name];
                    };
                    document.getElementsByTagName("head")[0].appendChild(script);
                }
            };
        }();
        var _default = Utils;
        exports.default = _default;
    }, {} ],
    5: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var WhoDis = function() {
            var ua = navigator.userAgent;
            return {
                Android: function Android() {
                    return ua.match(/Android/i);
                },
                BlackBerry: function BlackBerry() {
                    return ua.match(/BlackBerry/i);
                },
                Chrome: function Chrome() {
                    return ua.match(/Chrome/i);
                },
                Edge: function Edge() {
                    return ua.match(/Edge/i);
                },
                Firefox: function Firefox() {
                    return ua.match(/Firefox/i);
                },
                IE: function IE() {
                    return ua.match(/Trident/i);
                },
                IEMobile: function IEMobile() {
                    return ua.match(/IEMobile/i);
                },
                IE10: function IE10() {
                    return ua.match(/MSIE/i);
                },
                iOS: function iOS() {
                    return ua.match(/iPhone|iPad|iPod/i);
                },
                Opera: function Opera() {
                    return ua.match(/Opera Mini/i);
                },
                OperaMini: function OperaMini() {
                    return ua.match(/Opera Mini/i);
                },
                Safari: function Safari() {
                    return !!ua.match(/Version\/[\d\.]+.*Safari/);
                },
                Touch: function Touch() {
                    return "ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch;
                },
                anyMS: function anyMS() {
                    return WhoDis.IE10() || WhoDis.IE() || WhoDis.Edge();
                },
                anyMobile: function anyMobile() {
                    return WhoDis.Android() || WhoDis.BlackBerry() || WhoDis.iOS() || WhoDis.OperaMini() || WhoDis.IEMobile();
                }
            };
        }();
        var _default = WhoDis;
        exports.default = _default;
    }, {} ],
    6: [ function(require, module, exports) {
        "use strict";
        var _WhoDis = _interopRequireDefault(require("./WhoDis.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        var html = document.querySelector("html");
        if (_WhoDis.default.anyMobile()) {
            document.addEventListener("touchstart", function() {}, true);
        }
        if (_WhoDis.default.Touch()) {
            document.addEventListener("touchstart", function() {}, true);
        }
        if (_WhoDis.default.IE10()) {
            document.documentElement.className += " is-ie";
        }
        if (_WhoDis.default.anyMS()) {
            html.classList.add("is-ms");
        }
        if (_WhoDis.default.IE()) {
            document.documentElement.className += " is-ie";
        }
        if (_WhoDis.default.Edge()) {
            html.classList.add("is-edge");
        }
    }, {
        "./WhoDis.js": 5
    } ]
}, {}, [ 1 ]);
//# sourceMappingURL=assets/js/maps/app.min.js.map
